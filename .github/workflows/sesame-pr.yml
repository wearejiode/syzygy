name: Sesame Preview PR Deploy & Verify

on:
  pull_request:
    branches: [main]
    paths:
      - 'apps/core/jiode/sesame.jiode.one/**'

permissions:
  contents: read
  deployments: write

concurrency:
  group: pr-sesame-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  changes:
    name: detect changes
    runs-on: ubuntu-latest
    outputs:
      app: ${{ steps.filter.outputs.app }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            app:
              - 'apps/core/jiode/sesame.jiode.one/**'
  verify:
    name: sesame / verify
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.app == 'true' }}
    strategy:
      matrix:
        app:
          - id: 'sesame.jiode.one'
            path: 'apps/core/jiode/sesame.jiode.one'
            publicDir: 'apps/core/jiode/sesame.jiode.one/public'
            wranglerConfig: 'apps/core/jiode/sesame.jiode.one/sesame-meta-worker/wrangler.preview.toml'
            previewBucket: 'sesame-data-preview'
            previewHost: 'jiode.workers.dev'
    steps:
      - uses: actions/checkout@v4

      - name: Enable Corepack (uses package.json packageManager)
        run: corepack enable

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile

      # Add whatever is relevant/fast for this worker
      - name: Type check (tsc --noEmit)
        run: pnpm -w exec tsc -p "${{ matrix.app.path }}/tsconfig.json" --noEmit || true

      - name: Lint
        run: pnpm -w exec eslint "${{ matrix.app.path }}" --max-warnings=0 || true

      - name: Unit tests (if you have any)
        run: pnpm -w test --filter @jiode/sesame || echo "no tests yet"

      - name: Ensure preview R2 bucket exists
        run: npx -y wrangler@4.33.0 r2 bucket create sesame-data-preview || true
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  ci:
    name: sesame / CI build
    uses: wearejiode/syzygy/.github/workflows/_worker-ci.yml@main
    secrets: inherit
    permissions:
      contents: read
      deployments: write
      id-token: write
      attestations: write
    needs: changes
    if: ${{ needs.changes.outputs.app == 'true' }}
    strategy:
      matrix:
        app:
          - id: 'sesame.jiode.one'
            path: 'apps/core/jiode/sesame.jiode.one'
            publicDir: 'apps/core/jiode/sesame.jiode.one/public'
            wranglerConfig: 'apps/core/jiode/sesame.jiode.one/sesame-meta-worker/wrangler.preview.toml'
            previewBucket: 'sesame-data-preview'
            previewHost: 'jiode.workers.dev'
    with:
      app_id: ${{ matrix.app.id }}
      app_path: ${{ matrix.app.path }}
      wrangler_config: ${{ matrix.app.wranglerConfig }}
      environment: preview
      deploy: false
      artifact_name: ${{ matrix.app.id }}-worker-${{ github.sha }}
  preview:
    name: sesame / deploy preview
    if: ${{ !github.event.pull_request.head.repo.fork && needs.changes.outputs.app == 'true' }}
    needs: [changes, ci]
    uses: ./.github/workflows/_worker-ci.yml
    permissions:
      contents: read
      deployments: write
      id-token: write
      attestations: write
    strategy:
      matrix:
        app:
          - id: 'sesame.jiode.one'
            path: 'apps/core/jiode/sesame.jiode.one'
            publicDir: 'apps/core/jiode/sesame.jiode.one/public'
            wranglerConfig: 'apps/core/jiode/sesame.jiode.one/sesame-meta-worker/wrangler.preview.toml'
            previewBucket: 'sesame-data-preview'
            previewHost: 'jiode.workers.dev'
    with:
      app_id: ${{ matrix.app.id }}
      app_path: ${{ matrix.app.path }}
      wrangler_config: ${{ matrix.app.wranglerConfig }}
      environment: preview
      deploy: true
      worker_name: sesame-pr-${{ github.event.pull_request.number }}
      preview_host: ${{ matrix.app.previewHost }}
      artifact_name: ${{ matrix.app.id }}-worker-${{ github.sha }}
    secrets:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

  mark-deployment:
    needs: [changes, preview]
    if: ${{ needs.preview.result == 'success' && needs.changes.outputs.app == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Mark Deployment Preview
        uses: ./.github/actions/mark-deployment/mark-deployment-preview
