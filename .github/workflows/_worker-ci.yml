# Reusable workflow for CI that uploads Workers to Preview/Staging
# Production promotion is in _worker-promote.yml
# In case of emergency, A maintainer can use this to deploy a hotfix to production
# by setting `allow_hotfix: true` in the workflow call.
# This is used by sesame.jiode.one

name: Shared Worker for Preview and Staging CI
on:
  workflow_call:
    inputs:
      app_id: { required: true, type: string } # e.g. sREBASE;)
      app_path: { required: true, type: string } # e.g. Simulate REBASE
      wrangler_config: { required: true, type: string } # e.g. apps/.../wrangler.staging.toml
      environment: { required: true, type: string } # preview|staging|prod
      worker_name: { required: false, type: string } # for preview overrides
      deploy: { required: false, type: boolean, default: false } # whether to deploy or just build/test
      allow_hotfix: { required: false, type: boolean, default: false } # for emergency hotfixes
      preview_host: { required: false, type: string, default: '' } # for preview hostname
      artifact_name: { required: false, type: string, default: '' } # optional explicit artifact name

    secrets:
      CLOUDFLARE_API_TOKEN: { required: false }
      CLOUDFLARE_ACCOUNT_ID: { required: false }

jobs:
  ci:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      attestations: write
    env:
      APP_PATH: ${{ inputs.app_path }}
      CONFIG: ${{ inputs.wrangler_config }}
      ENV: ${{ inputs.environment }}
      PREVIEW_HOST: ${{ inputs.preview_host != '' && inputs.preview_host || vars.PREVIEW_HOST }}
      ARTIFACT_NAME: ${{ inputs.artifact_name != '' && inputs.artifact_name || format('{0}-worker-{1}', inputs.app_id, github.sha) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      - name: Build
        run: node $APP_PATH/scripts/build-worker.mjs

      - name: Prepare release folder
        run: |
          mkdir -p dist/releases/${{ github.sha }}
          cp dist/apps/${{ inputs.app_id }}/meta-worker.generated.js \
             dist/releases/${{ github.sha }}/meta-worker.generated.js

      - name: Create checksum
        run: |
          cd dist/releases/${{ github.sha }}
          sha256sum meta-worker.generated.js > meta-worker.sha256

      - name: Upload build artifact (JS + checksum)
        if: ${{ inputs.deploy != true }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: |
            dist/releases/${{ github.sha }}/meta-worker.generated.js
            dist/releases/${{ github.sha }}/meta-worker.sha256
          retention-days: 30

      - name: Attest build provenance
        if: inputs.deploy == true
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: dist/releases/${{ github.sha }}/meta-worker.generated.js

      - name: Deploy (Workers)
        if: inputs.deploy == true && (inputs.environment != 'prod' || inputs.allow_hotfix == true)
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          NAME_OPT=""
          if [ -n "${{ inputs.worker_name }}" ]; then NAME_OPT="--name ${{ inputs.worker_name }}"; fi
          npx -y wrangler@4.31.0 deploy \
            dist/releases/${{ github.sha }}/meta-worker.generated.js \
            --config "$CONFIG" $NAME_OPT --no-bundle
