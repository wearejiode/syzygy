#A job that runs on any docs/ci PRs to set their deployment status to "true". This prevents
#the PR from being blocked on a preview deployment that will never happen.
#This is a workaround for GitHub not allowing per-path required checks.
name: PR Auto-Add Deployment Status for Non-App Changes
on:
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review, edited]

permissions:
  contents: read
  deployments: write

jobs:
  preview-meta:
    name: Preview (meta)
    runs-on: ubuntu-latest
    steps:
      - name: Detect app changes
        id: detect
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const pr = context.payload.pull_request.number;

            // List changed files for this PR
            const files = [];
            let page = 1;
            while (true) {
              const { data } = await github.rest.pulls.listFiles({ owner, repo, pull_number: pr, per_page: 100, page });
              if (!data.length) break;
              files.push(...data.map(f => f.filename));
              if (data.length < 100) break;
              page++;
            }

            // ðŸ‘‡ add all app roots you care about
            const appTouched =
              files.some(p => p.startsWith('apps/core/jiode/sesame.jiode.one/')) ||
              files.some(p => p.startsWith('apps/core/jiode/jiode.one/')) ||
              files.some(p => p.startsWith('apps/core/api/genie-session/'));

            core.setOutput('app_changed', appTouched ? 'true' : 'false');

      - name: Create no-op Preview deployment
        if: steps.detect.outputs.app_changed == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const ref = context.payload.pull_request.head.sha;
            const prUrl = context.payload.pull_request?.html_url || `https://github.com/${owner}/${repo}`;

            // Create a GitHub Deployment to the "Preview" environment (or rename to match your protection)
            const dep = await github.rest.repos.createDeployment({
              owner, repo, ref,
              auto_merge: false,
              required_contexts: [],              // don't wait for other checks
              environment: 'preview',
              description: 'CI-only change: no preview deploy needed',
              transient_environment: true,
              production_environment: false,
            });

            // Immediately mark it successful
            await github.rest.repos.createDeploymentStatus({
              owner, repo,
              deployment_id: dep.data.id,
              state: 'success',
              environment: 'Preview',
              // Link to the PR as a neutral, valid https URL
              environment_url: prUrl
            });
